{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\notus-react-master\\\\src\\\\components\\\\Cards\\\\CardBarChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\nexport default function CardBarChart() {\n  React.useEffect(() => {\n    let config = {\n      type: \"bar\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [{\n          label: new Date().getFullYear(),\n          backgroundColor: \"#ed64a6\",\n          borderColor: \"#ed64a6\",\n          data: [30, 78, 56, 34, 100, 45, 13],\n          fill: false,\n          barThickness: 8\n        }, {\n          label: new Date().getFullYear() - 1,\n          fill: false,\n          backgroundColor: \"#4c51bf\",\n          borderColor: \"#4c51bf\",\n          data: [27, 68, 86, 74, 10, 4, 87],\n          barThickness: 8\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Orders Chart\"\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true\n        },\n        legend: {\n          labels: {\n            fontColor: \"rgba(0,0,0,.4)\"\n          },\n          align: \"end\",\n          position: \"bottom\"\n        },\n        scales: {\n          xAxes: [{\n            display: false,\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\"\n            },\n            gridLines: {\n              borderDash: [2],\n              borderDashOffset: [2],\n              color: \"rgba(33, 37, 41, 0.3)\",\n              zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: false,\n              labelString: \"Value\"\n            },\n            gridLines: {\n              borderDash: [2],\n              drawBorder: false,\n              borderDashOffset: [2],\n              color: \"rgba(33, 37, 41, 0.2)\",\n              zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }]\n        }\n      }\n    };\n    let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n    window.myBar = new Chart(ctx, config);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rounded-t mb-0 px-4 py-3 bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative w-full max-w-full flex-grow flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"uppercase text-gray-500 mb-1 text-xs font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Performance\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-gray-800 text-xl font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Total orders\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 flex-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative h-350-px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"bar-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/project/notus-react-master/src/components/Cards/CardBarChart.js"],"names":["React","Chart","CardBarChart","useEffect","config","type","data","labels","datasets","label","Date","getFullYear","backgroundColor","borderColor","fill","barThickness","options","maintainAspectRatio","responsive","title","display","text","tooltips","mode","intersect","hover","legend","fontColor","align","position","scales","xAxes","scaleLabel","labelString","gridLines","borderDash","borderDashOffset","color","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","yAxes","drawBorder","ctx","document","getElementById","getContext","window","myBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrCF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,QAAIC,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CACN,SADM,EAEN,UAFM,EAGN,OAHM,EAIN,OAJM,EAKN,KALM,EAMN,MANM,EAON,MAPM,CADJ;AAUJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EADT;AAEEC,UAAAA,eAAe,EAAE,SAFnB;AAGEC,UAAAA,WAAW,EAAE,SAHf;AAIEP,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,EAA1B,CAJR;AAKEQ,UAAAA,IAAI,EAAE,KALR;AAMEC,UAAAA,YAAY,EAAE;AANhB,SADQ,EASR;AACEN,UAAAA,KAAK,EAAE,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,CADpC;AAEEG,UAAAA,IAAI,EAAE,KAFR;AAGEF,UAAAA,eAAe,EAAE,SAHnB;AAIEC,UAAAA,WAAW,EAAE,SAJf;AAKEP,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,EAAxB,CALR;AAMES,UAAAA,YAAY,EAAE;AANhB,SATQ;AAVN,OAFK;AA+BXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,UAAU,EAAE,IAFL;AAGPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,IAAI,EAAE;AAFD,SAHA;AAOPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,OADE;AAERC,UAAAA,SAAS,EAAE;AAFH,SAPH;AAWPC,QAAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,SAAS,EAAE;AAFN,SAXA;AAePE,QAAAA,MAAM,EAAE;AACNnB,UAAAA,MAAM,EAAE;AACNoB,YAAAA,SAAS,EAAE;AADL,WADF;AAINC,UAAAA,KAAK,EAAE,KAJD;AAKNC,UAAAA,QAAQ,EAAE;AALJ,SAfD;AAsBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEX,YAAAA,OAAO,EAAE,KADX;AAEEY,YAAAA,UAAU,EAAE;AACVZ,cAAAA,OAAO,EAAE,IADC;AAEVa,cAAAA,WAAW,EAAE;AAFH,aAFd;AAMEC,YAAAA,SAAS,EAAE;AACTC,cAAAA,UAAU,EAAE,CAAC,CAAD,CADH;AAETC,cAAAA,gBAAgB,EAAE,CAAC,CAAD,CAFT;AAGTC,cAAAA,KAAK,EAAE,uBAHE;AAITC,cAAAA,aAAa,EAAE,uBAJN;AAKTC,cAAAA,kBAAkB,EAAE,CAAC,CAAD,CALX;AAMTC,cAAAA,wBAAwB,EAAE,CAAC,CAAD;AANjB;AANb,WADK,CADD;AAkBNC,UAAAA,KAAK,EAAE,CACL;AACErB,YAAAA,OAAO,EAAE,IADX;AAEEY,YAAAA,UAAU,EAAE;AACVZ,cAAAA,OAAO,EAAE,KADC;AAEVa,cAAAA,WAAW,EAAE;AAFH,aAFd;AAMEC,YAAAA,SAAS,EAAE;AACTC,cAAAA,UAAU,EAAE,CAAC,CAAD,CADH;AAETO,cAAAA,UAAU,EAAE,KAFH;AAGTN,cAAAA,gBAAgB,EAAE,CAAC,CAAD,CAHT;AAITC,cAAAA,KAAK,EAAE,uBAJE;AAKTC,cAAAA,aAAa,EAAE,wBALN;AAMTC,cAAAA,kBAAkB,EAAE,CAAC,CAAD,CANX;AAOTC,cAAAA,wBAAwB,EAAE,CAAC,CAAD;AAPjB;AANb,WADK;AAlBD;AAtBD;AA/BE,KAAb;AA4FA,QAAIG,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,UAArC,CAAgD,IAAhD,CAAV;AACAC,IAAAA,MAAM,CAACC,KAAP,GAAe,IAAI/C,KAAJ,CAAU0C,GAAV,EAAevC,MAAf,CAAf;AACD,GA/FD,EA+FG,EA/FH;AAgGA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,mFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAI,IAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF,CADF,CADF,eAaE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAbF,CADF,CADF;AAwBD","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function CardBarChart() {\n  React.useEffect(() => {\n    let config = {\n      type: \"bar\",\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: new Date().getFullYear(),\n            backgroundColor: \"#ed64a6\",\n            borderColor: \"#ed64a6\",\n            data: [30, 78, 56, 34, 100, 45, 13],\n            fill: false,\n            barThickness: 8,\n          },\n          {\n            label: new Date().getFullYear() - 1,\n            fill: false,\n            backgroundColor: \"#4c51bf\",\n            borderColor: \"#4c51bf\",\n            data: [27, 68, 86, 74, 10, 4, 87],\n            barThickness: 8,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Orders Chart\",\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true,\n        },\n        legend: {\n          labels: {\n            fontColor: \"rgba(0,0,0,.4)\",\n          },\n          align: \"end\",\n          position: \"bottom\",\n        },\n        scales: {\n          xAxes: [\n            {\n              display: false,\n              scaleLabel: {\n                display: true,\n                labelString: \"Month\",\n              },\n              gridLines: {\n                borderDash: [2],\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Value\",\n              },\n              gridLines: {\n                borderDash: [2],\n                drawBorder: false,\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.2)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n        },\n      },\n    };\n    let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n    window.myBar = new Chart(ctx, config);\n  }, []);\n  return (\n    <>\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n        <div className=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n          <div className=\"flex flex-wrap items-center\">\n            <div className=\"relative w-full max-w-full flex-grow flex-1\">\n              <h6 className=\"uppercase text-gray-500 mb-1 text-xs font-semibold\">\n                Performance\n              </h6>\n              <h2 className=\"text-gray-800 text-xl font-semibold\">\n                Total orders\n              </h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-4 flex-auto\">\n          {/* Chart */}\n          <div className=\"relative h-350-px\">\n            <canvas id=\"bar-chart\"></canvas>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}